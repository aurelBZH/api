swagger: '2.0'
info:
  title: iReceptor Data Source API
  version: 2.0.5
  contact:
    name: iReceptor Project
    url: 'http://www.ireceptor.org/'
    email: breden@sfu.ca
  description: >
    Documentation of Major Version 2 of the iReceptor Adaptive Immune Receptor
    Repertoire (AIRR) data repsoitory web service application programming interface
    (API). V2 of the API implements an increased level of compliance with the
    [Minimal Information for AIRR (MiAIRR)
    standard](https://github.com/airr-community/airr-standards). Learn more
    about [iReceptor](http://www.ireceptor.org/)
host: ipa.ireceptor.org
basePath: /v2
definitions:
  # A definition of the summary response for an iReceptor API call. This 
  # response is used wherever summary data at the sample level is provided
  # by an API call. It is composed of the sequence count, the relevant AIRR
  # model elements, and the revelant iReceptor model elements.
  ireceptor_summary_response:
    type: array
    items:
      allOf:
      - $ref: '#/definitions/ireceptor_sequence_count_model'
      - $ref: '#/definitions/airr_summary_model'
      - $ref: 'https://raw.githubusercontent.com/sfu-ireceptor/api/AIRR-compliance/ireceptor_summary.yaml#/ireceptor_summary_model'
  # A definition of the sequence response for an iReceptor API call. This
  # response is used wherever sequence data is provided by an API call.
  # It is a composite of the sequence fields defined by the MiAIRR standard,
  # the sequence fields defined by the AIRR Formats working group, and any
  # ancillary fields defined by iReceptor.
  ireceptor_sequence_response:
    type: array
    items:
      allOf:
      - $ref: 'https://raw.githubusercontent.com/sfu-ireceptor/api/AIRR-compliance/MiAIRR_rearrangement.yaml#/MiAIRR_Rearrangements'
      - $ref: 'https://raw.githubusercontent.com/sfu-ireceptor/api/AIRR-compliance/Formats_rearrangement.yaml#/Formats_Rearrangements'
      - $ref: 'https://raw.githubusercontent.com/sfu-ireceptor/api/AIRR-compliance/ireceptor_sequence.yaml#/ireceptor_sequence_annotation_model'
  # The AIRR Minimal Standards model for metadata above the sequence annotation level.
  airr_summary_model:
    allOf:
    - $ref: 'https://raw.githubusercontent.com/airr-community/airr-standards/master/specs/definitions.yaml#/Study'
    - $ref: 'https://raw.githubusercontent.com/airr-community/airr-standards/master/specs/definitions.yaml#/Subject'
    - $ref: 'https://raw.githubusercontent.com/airr-community/airr-standards/master/specs/definitions.yaml#/Diagnosis'
    - $ref: 'https://raw.githubusercontent.com/airr-community/airr-standards/master/specs/definitions.yaml#/Sample'
    - $ref: 'https://raw.githubusercontent.com/airr-community/airr-standards/master/specs/definitions.yaml#/CellProcessing'
    - $ref: 'https://raw.githubusercontent.com/airr-community/airr-standards/master/specs/definitions.yaml#/NucleicAcidProcessing'
    - $ref: 'https://raw.githubusercontent.com/airr-community/airr-standards/master/specs/definitions.yaml#/RawSequenceData'
    - $ref: 'https://raw.githubusercontent.com/airr-community/airr-standards/master/specs/definitions.yaml#/SoftwareProcessing'
  # A simple model to represent a sequence count, used to make the 
  # composite responses clean in that they all refer to models.
  ireceptor_sequence_count_model:
      type: object
      properties:
        ir_sequence_count:
          type: integer
          description: Number of sequences found that met the search criteria for this sample
          example: 123456
  ireceptor_core_samples_parameters_model:
      type: object
      required:
        - ir_username
      properties:
        ir_username:
          type: string
          description: >
            Username of the individual requesting access to the iReceptor
            repository node.
        ir_lab_id:
          type: string
          description: |
            e.g. 1
        ir_project_id:
          type: array
          items:
            type: string
          description: |
            e.g. 1
  ireceptor_ancillary_samples_parameters_model:
      type: object
      properties:
        ir_subject_age_min:
          type: integer
          description: |
            e.g. 30
        ir_subject_age_max:
          type: integer
          description: |
            e.g. 50
  #
  # AIRR Formats compliant extended parameters for rearrangements (/sequences* entry points)
  #
  airr_formats_sequences_parameters_model:
    type: object
    properties:
      junction_length:
        type: integer
        description: |
          Number of junction nucleotides in sequence_vdj (CDR3 + conserved residues)
      functional:
        type: string
        description: |
          Filter for sequences that are either functional, non-functional, or both
  #
  # iReceptor extensions to the MiAIRR and AIRR Formats parameter models.
  #
  ireceptor_core_sequences_parameters_model:
      type: object
      required:
        - ir_username
      properties:
        ir_username:
          type: string
          description: >
            Username of the individual requesting access to the iReceptor
            repository node.
        ir_project_sample_id_list:
          type: array
          items:
            type: string
        ir_data_format:
          description: >-
            'csv' - vQuest based CSV (as per /v1);  'tsv' - vQuest based
            TSV (as per /v1 with tab delimiters instead of commas); 'airr'
            - AIRR Formats rearrangements TSV (as per AIRR formats
            rearrangements spec)
  ireceptor_ancillary_sequences_parameters_model:
      type: object
      properties:
        ir_show_unproductive:
          type: string
          description: >-
            By default, only productive sequences are returned. In order to return
            unproductive sequences, set this parameter to "T"
        ir_junction_aa_length:
          type: integer
          description: >-
            Length of JUNCTION in amino acids (iReceptor)
parameters:
  #
  # Generally useful parameters for all API entry points.
  #
  ir_username:
    name: ir_username
    in: query
    description: >
      Username of the individual requesting access to the iReceptor
      repository node. If the iReceptor repository is a public repository,
      then this parameter is not required. If the repository is not public
      then the username must be supplied and the repository will determine
      the access for that user for that repository.
    required: false
    type: string
  #
  # MiAIRR compliant parameters for /samples entry points.
  # Note: Currently only those parameters used by iReceptor repositories
  # are defined here.
  #
  study_id:
    name: study_id
    type: string
    in: query
  study_title:
    name: study_title
    type: string
    in: query
  study_description:
    name: study_description
    type: string
    in: query
  lab_name:
    name: lab_name
    type: string
    in: query
  subject_id:
    name: subject_id
    type: string
    in: query
  organism:
    name: organism
    type: string
    in: query
  sex:
    name: sex
    type: string
    in: query
  ethnicity:
    name: ethnicity
    type: string
    in: query
  study_group_description:
    name: study_group_description
    type: string
    in: query
  sample_id:
    name: sample_id
    type: string
    in: query
  tissue:
    name: tissue
    type: string
    in: query
  disease_state_sample:
    name: disease_state_sample
    type: string
    in: query
  cell_subset:
    name: cell_subset
    type: string
    in: query
  cell_phenotype:
    name: cell_phenotype
    type: string
    in: query
  library_source:
    name: library_source
    type: string
    in: query
  platform:
    name: platform
    type: string
    in: query
  #
  # iReceptor specific parameters for the /samples API entry point.
  #
  ir_lab_id:
    name: ir_lab_id
    in: query
    description: |
      e.g. 1
    required: false
    type: string
  ir_project_id:
    name: ir_project_id
    in: query
    description: |
      e.g. 1
    required: false
    type: array
    items:
      type: string
  ir_subject_age_min:
    name: ir_subject_age_min
    in: query
    description: |
      e.g. 10
    required: false
    type: integer
  ir_subject_age_max:
    name: ir_subject_age_max
    in: query
    description: |
      e.g. 12
    required: false
    type: integer    
  #
  # MiAIRR compliant parameters for rearrangements (/sequences* entry points)
  #
  germline_database:
    name: germline_database
    in: query
    type: string
    description: >
      Source of germline V(D)J segments, with version number or
      date accessed (e.g. IMGT/V-QUEST Release 201736-4 (7 September 2017)) (AIRR)
  cell_index:
    name: cell_index
    in: query
    type: integer
    description: |
      Cell Index (UID linking sequences from the same cell) (AIRR)
  v_allele:
    name: v_allele
    in: query
    type: string
    description: |
      V gene with allele (e.g. IGHV4-59*01) (AIRR)
  d_allele:
    name: d_allele
    in: query
    type: string
    description: |
      D gene with allele (e.g. IGHD3-10*01) (AIRR)
  j_allele:
    name: j_allele
    in: query
    type: string
    description: |
      J gene with allele (e.g. IGHJ4*02) (AIRR)
  c_allele:
    name: c_allele
    in: query
    type: string
    description: |
      C region with allele (AIRR)                     
  junction_nt:
    name: junction_nt
    in: query
    type: string
    description: >
      JUNCTION nucleotide sequence (Sequence of the CDR3
      region + conserved residues (nucleotide)) (AIRR)
  junction_aa:
    name: junction_aa
    in: query
    type: string
    description: >
      JUNCTION amino acid sequence (Sequence of the CDR3
      region + conserved residues (amino acid)) (AIRR)
  duplicate_count:
    name: duplicate_count
    in: query
    type: integer
    description: |
      Number of times the sequence has been duplicated in a file (AIRR)
  #
  # AIRR Formats compliant extended parameters for rearrangements (/sequences* entry points)
  #
  junction_length:
    name: junction_length
    in: query
    type: integer
    description: |
      Number of junction nucleotides in sequence_vdj (CDR3 + conserved residues)
  functional:
    name: functional
    in: query
    type: string
    description: |
      Filter for sequences that are either functional, non-functional, or both
  #
  # iReceptor specific parameters for rearrangements (/sequences* entry points)
  #
  ir_sample_id_list:
    name: ir_project_sample_id_list
    in: query
    description: >
      List of unique identifiers (specific to the repository) that identify the samples
      to apply the query to.
    required: false
    type: array
    items:
      type: string
  ir_data_format:
    name: ir_data_format
    in: query
    description: >-
      Data format to return the sequence data in, one of:</br>
      'csv' - vQuest based CSV (as per /v1)(default)</br>
      'tsv' - vQuest based TSV (as per /v1 with tab delimiters instead of commas);</br>
      'airr' - AIRR Formats rearrangements TSV (as per AIRR formats rearrangements spec)
    required: false
    type: string
  ir_show_unproductive:
    name: ir_show_unproductive
    in: query
    description: >
      By default, only productive sequences are returned. In order to return
      unproductive sequences, set this parameter to "T"
    required: false
    type: array
    items:
      type: string
  ir_junction_nt_length:
    name: ir_junction_nt_length
    in: query
    description: >-
      Length of JUNCTION (CDR3 + conserved residues) in nucleotide base pairs (iReceptor)
    required: false
    type: integer
  ir_junction_aa_length:
    name: ir_junction_aa_length
    in: query
    description: >-
      Length of JUNCTION (CDR3 + conserved residues) in amino acids (iReceptor)
    required: false
    type: integer
schemes:
  - https
produces:
  - application/json
consumes:
  - application/x-www-form-urlencoded
  - application/json
tags:
  - name: info
    description: Service information
  - name: samples
    description: Queries for samples
  - name: sequences
    description: Queries for sequences
  - name: clones
    description: Queries for clones
paths:
  /:
    x-swagger-router-controller: status
    get:
      description: |
        Service heartbeat.
      operationId: getStatus
      responses:
        '200':
          description: |
            Success.
          schema:
            type: object
            properties:
              result:
                type: string
  /info:
    x-swagger-router-controller: status
    get:
      description: |
        Service information.
      tags:
        - info
      operationId: getInfo
      responses:
        '200':
          description: |
            Success.
          schema:
            type: object
            properties:
              name:
                type: string
              version:
                type: string
  /swagger:
    x-swagger-pipe: swagger_raw
  /samples:
    x-swagger-router-controller: samples
    get:
      description: >
        This service returns metadata about samples, including higher-level
        meta-data around the study, subject, diagnosis, and sample processing
        (data relevant to MiAIRR data classes 1 through 3). The data returned is
        filtered based on the parameters provided.

        A successful call returns a json list with a sample level summary of
        each sample including a summary count of the number of sequences found
        for that sample.
      tags:
        - samples
      parameters:
        - $ref: '#/parameters/ir_username'
        - $ref: '#/parameters/ir_lab_id'
        - $ref: '#/parameters/ir_project_id'
        - $ref: '#/parameters/study_id'
        - $ref: '#/parameters/study_title'
        - $ref: '#/parameters/study_description'
        - $ref: '#/parameters/lab_name'
        - $ref: '#/parameters/subject_id'
        - $ref: '#/parameters/organism'
        - $ref: '#/parameters/sex'
        - $ref: '#/parameters/ethnicity'
        - $ref: '#/parameters/study_group_description'
        - $ref: '#/parameters/sample_id'
        - $ref: '#/parameters/tissue'
        - $ref: '#/parameters/disease_state_sample'
        - $ref: '#/parameters/cell_subset'
        - $ref: '#/parameters/cell_phenotype'
        - $ref: '#/parameters/library_source'
        - $ref: '#/parameters/platform'
        - $ref: '#/parameters/ir_subject_age_min'
        - $ref: '#/parameters/ir_subject_age_max'
      operationId: getSamples
      responses:
        '200':
          description: |
            A successful call returns an array of sample summary metadata for
            each sample that meets the search criteria. The metadata returned
            for each sample includes the number of sequences found for that sample
            as well as the study/subject/sample data for that sample. The metadata
            for each sample in the response contains a set of AIRR compliant data
            as well as repository specific data that is required to query the
            repository about those types of elements. 
          schema:
            $ref: '#/definitions/ireceptor_summary_response'
        '400':
          description: malformed request
        '401':
          description: authentication error
        '403':
          description: authorization error
        '404':
          description: data not found
        '405':
          description: method not allowed
    post:
      description: >
        This service returns metadata about samples, including higher-level
        meta-data around the study, subject, diagnosis, and sample processing
        (data relevant to MiAIRR data classes 1 through 3). The data returned is
        filtered based on the parameters provided.

        A successful call returns a json list with a sample level summary of
        each sample including a summary count of the number of sequences found
        for that sample.
      tags:
        - samples
      parameters:
        - name: query
          in: body
          required: true
          schema:
            allOf:
            - $ref: '#/definitions/ireceptor_core_samples_parameters_model'
            - $ref: '#/definitions/airr_summary_model'
            - $ref: '#/definitions/ireceptor_ancillary_samples_parameters_model'
      operationId: postSamples
      responses:
        '200':
          description: >
            A successful call returns the metadata for each sample, including
            the number of sequences found for that sample.
          schema:
            $ref: '#/definitions/ireceptor_summary_response'
        '400':
          description: malformed request
        '401':
          description: authentication error
        '403':
          description: authorization error
        '404':
          description: data not found
        '405':
          description: method not allowed
  /sequences_summary:
    x-swagger-router-controller: sequences
    get:
      description: >
        This service returns a summary of sequences that matches the GET
        provided filter. "username" parameter refers to external_users table.
      tags:
        - sequences
      parameters:
        - $ref: '#/parameters/ir_username'
        - $ref: '#/parameters/ir_sample_id_list'
        - $ref: '#/parameters/v_allele'
        - $ref: '#/parameters/d_allele'
        - $ref: '#/parameters/j_allele'
        - $ref: '#/parameters/junction_aa'
        - $ref: '#/parameters/junction_length'
        - $ref: '#/parameters/functional'
        - $ref: '#/parameters/ir_show_unproductive'
        - $ref: '#/parameters/ir_junction_aa_length'
      operationId: getSequenceSummary
      responses:
        '200':
          description: >
            A successful call returns two components, an aggregated summary of the data
            that satisfies the query and an example subset of the annotated sequence data
            that meets the query criteria. The aggreated data returns a summary similar
            to that returned by the /samples API entry point, returning the number of
            sequences and the study/subject/sample meta-data for each sample. The example
            subset of sequence data that is returned is a small subset of annotated sequences
            that met the search criteria. The number of sequences returned is given in the
            "num_sequences" paramter to the query and the format in which the sequences are
            returned is provided by the "sequence_format" parameter to the query.
          schema:
            type: object
            properties:
              summary:
                $ref: '#/definitions/ireceptor_summary_response'
              items:
                $ref: '#/definitions/ireceptor_sequence_response'
        '400':
          description: malformed request
        '401':
          description: authentication error
        '403':
          description: authorization error
        '404':
          description: data not found
        '405':
          description: method not allowed
  /sequences_data:
    x-swagger-router-controller: sequences
    get:
      description: >
        This service returns the annotation data that matches the GET provided
        filter. "username" parameter refers to external_users table, and it
        requires the array of "project_sample_id", which limits which samples
        the sequences will be taken from. Other parameters are optional, and
        refer to the sequence_md_view view in iReceptor database.
      tags:
        - sequences
      parameters:
        - $ref: '#/parameters/ir_username'
        - $ref: '#/parameters/ir_sample_id_list'
        - $ref: '#/parameters/ir_data_format'
        - $ref: '#/parameters/v_allele'
        - $ref: '#/parameters/d_allele'
        - $ref: '#/parameters/j_allele'
        - $ref: '#/parameters/junction_aa'
        - $ref: '#/parameters/junction_length'
        - $ref: '#/parameters/functional'
        - $ref: '#/parameters/ir_show_unproductive'
        - $ref: '#/parameters/ir_junction_aa_length'
      operationId: getSequenceData
      responses:
        '200':
          description: >
            A successful call returns an array of sequence data. Optional
            "format" parameter determines the output format. Default is a JSON
            response, limited to top 50 results. If "format" is set to "csv", it
            will return all the matching sequence annotations, in addition to
            sample information and annotation tool information, in a
            comma-separated format; "tsv" returns a tab-delimited outputs; 
            "airr" returns AIRR minimal standards encoded tab-delimited outputs.
          schema:
            $ref: '#/definitions/ireceptor_sequence_response'
        '400':
          description: malformed request
        '401':
          description: authentication error
        '403':
          description: authorization error
        '404':
          description: data not found
        '405':
          description: method not allowed
    post:
      description: >
        This service returns the annotation data that matches the POST provided
        filter. "username" parameter refers to external_users table, and it
        requires the array of "project_sample_id", which limits which samples
        the sequences will be taken from. Other parameters are optional, and
        refer to the sequence_md_view view in iReceptor database. A full list of
        possible parameters is in the iReceptorAPI-sequenceMetadata file
      tags:
        - sequences
      parameters:
        - name: query
          in: body
          schema:
            allOf:
            - $ref: '#/definitions/ireceptor_core_sequences_parameters_model'
            - $ref: 'https://raw.githubusercontent.com/sfu-ireceptor/api/AIRR-compliance/MiAIRR_rearrangement.yaml#/MiAIRR_Rearrangements'
            - $ref: '#/definitions/airr_formats_sequences_parameters_model'
            - $ref: '#/definitions/ireceptor_ancillary_sequences_parameters_model'
      operationId: postSequenceData
      responses:
        '200':
          description: >
            A successful call returns an array of sequence data. Optional
            "format" parameter determines the output format. Default is a JSON
            response, limited to top 50 results. If "format" is set to "csv", it
            will return all the matching sequence annotations, in addition to
            sample information and annotation tool information, in a
            comma-separated format; "tsv" returns a tab-delimited outputs; 
            "airr" returns AIRR minimal standards encoded tab-delimited outputs.
          schema:
            $ref: '#/definitions/ireceptor_sequence_response'
        '400':
          description: malformed request
        '401':
          description: authentication error
        '403':
          description: authorization error
        '404':
          description: data not found
        '405':
          description: method not allowed
  /clones_summary:
    x-swagger-router-controller: clones
    get:
      description: >
        This service returns a summary of sequence clones that match the GET
        provided filter. "username" parameter refers to external_users table.
      tags:
        - clones
      parameters:
        - $ref: '#/parameters/ir_username'
        - $ref: '#/parameters/ir_sample_id_list'
        - $ref: '#/parameters/v_allele'
        - $ref: '#/parameters/d_allele'
        - $ref: '#/parameters/j_allele'
        - $ref: '#/parameters/junction_aa'
        - $ref: '#/parameters/junction_length'
        - $ref: '#/parameters/functional'
        - $ref: '#/parameters/ir_show_unproductive'
        - $ref: '#/parameters/ir_junction_aa_length'
      operationId: getCloneSummary
      responses:
        '200':
          description: >
            A successful call returns an summary of clone data as an array of
            'category' = count pairs in which the 'category' are string tags of
            parameters of interest from a controlled vocabulary term set.
          schema:
            type: object
            properties:
              summary:
                $ref: '#/definitions/ireceptor_summary_response'
              items:
                $ref: '#/definitions/ireceptor_sequence_response'
        '400':
          description: malformed request
        '401':
          description: authentication error
        '403':
          description: authorization error
        '404':
          description: data not found
        '405':
          description: method not allowed
  /clones_data:
    x-swagger-router-controller: clones
    get:
      description: >
        This service returns a list of clones that matches the GET provided
        filter. "username" parameter refers to external_users table.
      tags:
        - clones
      parameters:
        - $ref: '#/parameters/ir_username'
        - $ref: '#/parameters/ir_sample_id_list'
        - $ref: '#/parameters/ir_data_format'
        - $ref: '#/parameters/v_allele'
        - $ref: '#/parameters/d_allele'
        - $ref: '#/parameters/j_allele'
        - $ref: '#/parameters/junction_aa'
        - $ref: '#/parameters/junction_length'
        - $ref: '#/parameters/functional'
        - $ref: '#/parameters/ir_show_unproductive'
        - $ref: '#/parameters/ir_junction_aa_length'
      operationId: getCloneData
      responses:
        '200':
          description: >
            A successful call returns an array of sequence data. Optional
            "output" parameter determines the output format. Default is a JSON
            response, limited to top 50 results. If "output" is set to "csv", it
            will return all the matching sequence annotations, in addition to
            sample information and annotation tool information, in a
            comma-separated format. 
          schema:
            $ref: '#/definitions/ireceptor_sequence_response'
        '400':
          description: malformed request
        '401':
          description: authentication error
        '403':
          description: authorization error
        '404':
          description: data not found
        '405':
          description: method not allowed
